package io.mars.maintenance.domain;

import io.vertigo.dynamo.domain.model.Entity;
import io.vertigo.dynamo.domain.model.EnumVAccessor;
import io.vertigo.dynamo.domain.model.UID;
import io.vertigo.dynamo.domain.model.VAccessor;
import io.vertigo.dynamo.domain.stereotype.Field;
import io.vertigo.dynamo.domain.util.DtObjectUtil;
import io.vertigo.lang.Generated;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class Ticket implements Entity {
	private static final long serialVersionUID = 1L;

	private Long ticketId;
	private String code;
	private String title;
	private String description;
	private java.time.LocalDate dateCreated;
	private java.time.LocalDate dateClosed;

	@io.vertigo.dynamo.domain.stereotype.Association(
			name = "ATicketTicketStatus",
			fkFieldName = "ticketStatusId",
			primaryDtDefinitionName = "DtTicketStatus",
			primaryIsNavigable = true,
			primaryRole = "TicketStatus",
			primaryLabel = "Ticket Status",
			primaryMultiplicity = "0..1",
			foreignDtDefinitionName = "DtTicket",
			foreignIsNavigable = false,
			foreignRole = "Ticket",
			foreignLabel = "Ticket",
			foreignMultiplicity = "0..*")
	private final EnumVAccessor<io.mars.maintenance.domain.TicketStatus, io.mars.maintenance.domain.TicketStatusEnum> ticketStatusIdAccessor = new EnumVAccessor<>(io.mars.maintenance.domain.TicketStatus.class, "TicketStatus", io.mars.maintenance.domain.TicketStatusEnum.class);

	@io.vertigo.dynamo.domain.stereotype.Association(
			name = "AEquipmentTicket",
			fkFieldName = "equipmentId",
			primaryDtDefinitionName = "DtEquipment",
			primaryIsNavigable = true,
			primaryRole = "Equipment",
			primaryLabel = "Equipment",
			primaryMultiplicity = "0..1",
			foreignDtDefinitionName = "DtTicket",
			foreignIsNavigable = false,
			foreignRole = "Ticket",
			foreignLabel = "Ticket",
			foreignMultiplicity = "0..*")
	private final VAccessor<io.mars.basemanagement.domain.Equipment> equipmentIdAccessor = new VAccessor<>(io.mars.basemanagement.domain.Equipment.class, "Equipment");

	/** {@inheritDoc} */
	@Override
	public UID<Ticket> getUID() {
		return UID.of(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'Id'.
	 * @return Long ticketId <b>Obligatoire</b>
	 */
	@Field(domain = "DoId", type = "ID", required = true, label = "Id")
	public Long getTicketId() {
		return ticketId;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'Id'.
	 * @param ticketId Long <b>Obligatoire</b>
	 */
	public void setTicketId(final Long ticketId) {
		this.ticketId = ticketId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Number'.
	 * @return String code
	 */
	@Field(domain = "DoLabel", label = "Number")
	public String getCode() {
		return code;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Number'.
	 * @param code String
	 */
	public void setCode(final String code) {
		this.code = code;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Title'.
	 * @return String title
	 */
	@Field(domain = "DoLabel", label = "Title")
	public String getTitle() {
		return title;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Title'.
	 * @param title String
	 */
	public void setTitle(final String title) {
		this.title = title;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Description'.
	 * @return String description
	 */
	@Field(domain = "DoDescription", label = "Description")
	public String getDescription() {
		return description;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Description'.
	 * @param description String
	 */
	public void setDescription(final String description) {
		this.description = description;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Creation Date'.
	 * @return LocalDate dateCreated
	 */
	@Field(domain = "DoLocaldate", label = "Creation Date")
	public java.time.LocalDate getDateCreated() {
		return dateCreated;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Creation Date'.
	 * @param dateCreated LocalDate
	 */
	public void setDateCreated(final java.time.LocalDate dateCreated) {
		this.dateCreated = dateCreated;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Closing Date'.
	 * @return LocalDate dateClosed
	 */
	@Field(domain = "DoLocaldate", label = "Closing Date")
	public java.time.LocalDate getDateClosed() {
		return dateClosed;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Closing Date'.
	 * @param dateClosed LocalDate
	 */
	public void setDateClosed(final java.time.LocalDate dateClosed) {
		this.dateClosed = dateClosed;
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Ticket Status'.
	 * @return String ticketStatusId
	 */
	@Field(domain = "DoCode", type = "FOREIGN_KEY", label = "Ticket Status")
	public String getTicketStatusId() {
		return (String) ticketStatusIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Ticket Status'.
	 * @param ticketStatusId String
	 */
	public void setTicketStatusId(final String ticketStatusId) {
		ticketStatusIdAccessor.setId(ticketStatusId);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Equipment'.
	 * @return Long equipmentId
	 */
	@Field(domain = "DoId", type = "FOREIGN_KEY", label = "Equipment")
	public Long getEquipmentId() {
		return (Long) equipmentIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Equipment'.
	 * @param equipmentId Long
	 */
	public void setEquipmentId(final Long equipmentId) {
		equipmentIdAccessor.setId(equipmentId);
	}

 	/**
	 * Association : Equipment.
	 * @return l'accesseur vers la propriété 'Equipment'
	 */
	public VAccessor<io.mars.basemanagement.domain.Equipment> equipment() {
		return equipmentIdAccessor;
	}

 	/**
	 * Association : Ticket Status.
	 * @return l'accesseur vers la propriété 'Ticket Status'
	 */
	public EnumVAccessor<io.mars.maintenance.domain.TicketStatus, io.mars.maintenance.domain.TicketStatusEnum> ticketStatus() {
		return ticketStatusIdAccessor;
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DtObjectUtil.toString(this);
	}
}
