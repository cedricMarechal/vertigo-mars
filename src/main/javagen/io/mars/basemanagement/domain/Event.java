package io.mars.basemanagement.domain;

import io.vertigo.core.lang.Generated;
import io.vertigo.datamodel.structure.model.Entity;
import io.vertigo.datastore.impl.entitystore.EnumStoreVAccessor;
import io.vertigo.datamodel.structure.model.UID;
import io.vertigo.datastore.impl.entitystore.StoreVAccessor;
import io.vertigo.datamodel.structure.stereotype.Field;
import io.vertigo.datamodel.structure.util.DtObjectUtil;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class Event implements Entity {
	private static final long serialVersionUID = 1L;

	private Long eventId;
	private java.time.Instant dateTime;
	private Integer durationMinutes;
	private String affectedUrl;
	private String affectedLabel;
	private String affectedType;

	@io.vertigo.datamodel.structure.stereotype.Association(
			name = "AEventEventStatus",
			fkFieldName = "eventStatusId",
			primaryDtDefinitionName = "DtEventStatus",
			primaryIsNavigable = true,
			primaryRole = "EventStatus",
			primaryLabel = "Event Status",
			primaryMultiplicity = "0..1",
			foreignDtDefinitionName = "DtEvent",
			foreignIsNavigable = false,
			foreignRole = "Event",
			foreignLabel = "Event",
			foreignMultiplicity = "0..*")
	private final EnumStoreVAccessor<io.mars.basemanagement.domain.EventStatus, io.mars.basemanagement.domain.EventStatusEnum> eventStatusIdAccessor = new EnumStoreVAccessor<>(io.mars.basemanagement.domain.EventStatus.class, "EventStatus", io.mars.basemanagement.domain.EventStatusEnum.class);

	@io.vertigo.datamodel.structure.stereotype.Association(
			name = "AEventBase",
			fkFieldName = "baseId",
			primaryDtDefinitionName = "DtBase",
			primaryIsNavigable = true,
			primaryRole = "Base",
			primaryLabel = "Base",
			primaryMultiplicity = "0..1",
			foreignDtDefinitionName = "DtEvent",
			foreignIsNavigable = false,
			foreignRole = "Event",
			foreignLabel = "Event",
			foreignMultiplicity = "0..*")
	private final StoreVAccessor<io.mars.basemanagement.domain.Base> baseIdAccessor = new StoreVAccessor<>(io.mars.basemanagement.domain.Base.class, "Base");

	@io.vertigo.datamodel.structure.stereotype.Association(
			name = "AEventPerson",
			fkFieldName = "personId",
			primaryDtDefinitionName = "DtPerson",
			primaryIsNavigable = true,
			primaryRole = "Person",
			primaryLabel = "Person",
			primaryMultiplicity = "0..1",
			foreignDtDefinitionName = "DtEvent",
			foreignIsNavigable = false,
			foreignRole = "Event",
			foreignLabel = "Event",
			foreignMultiplicity = "0..*")
	private final StoreVAccessor<io.mars.hr.domain.Person> personIdAccessor = new StoreVAccessor<>(io.mars.hr.domain.Person.class, "Person");

	/** {@inheritDoc} */
	@Override
	public UID<Event> getUID() {
		return UID.of(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'Id'.
	 * @return Long eventId <b>Obligatoire</b>
	 */
	@Field(smartType = "STyId", type = "ID", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Id")
	public Long getEventId() {
		return eventId;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'Id'.
	 * @param eventId Long <b>Obligatoire</b>
	 */
	public void setEventId(final Long eventId) {
		this.eventId = eventId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'dateTime'.
	 * @return Instant dateTime
	 */
	@Field(smartType = "STyInstant", label = "dateTime")
	public java.time.Instant getDateTime() {
		return dateTime;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'dateTime'.
	 * @param dateTime Instant
	 */
	public void setDateTime(final java.time.Instant dateTime) {
		this.dateTime = dateTime;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'duration'.
	 * @return Integer durationMinutes
	 */
	@Field(smartType = "STyMinute", label = "duration")
	public Integer getDurationMinutes() {
		return durationMinutes;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'duration'.
	 * @param durationMinutes Integer
	 */
	public void setDurationMinutes(final Integer durationMinutes) {
		this.durationMinutes = durationMinutes;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'url'.
	 * @return String affectedUrl
	 */
	@Field(smartType = "STyUrl", label = "url")
	public String getAffectedUrl() {
		return affectedUrl;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'url'.
	 * @param affectedUrl String
	 */
	public void setAffectedUrl(final String affectedUrl) {
		this.affectedUrl = affectedUrl;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'label'.
	 * @return String affectedLabel
	 */
	@Field(smartType = "STyLabel", label = "label")
	public String getAffectedLabel() {
		return affectedLabel;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'label'.
	 * @param affectedLabel String
	 */
	public void setAffectedLabel(final String affectedLabel) {
		this.affectedLabel = affectedLabel;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'type'.
	 * @return String affectedType
	 */
	@Field(smartType = "STyLabel", label = "type")
	public String getAffectedType() {
		return affectedType;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'type'.
	 * @param affectedType String
	 */
	public void setAffectedType(final String affectedType) {
		this.affectedType = affectedType;
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Event Status'.
	 * @return String eventStatusId
	 */
	@io.vertigo.datamodel.structure.stereotype.ForeignKey(smartType = "STyCode", label = "Event Status", fkDefinition = "DtEventStatus" )
	public String getEventStatusId() {
		return (String) eventStatusIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Event Status'.
	 * @param eventStatusId String
	 */
	public void setEventStatusId(final String eventStatusId) {
		eventStatusIdAccessor.setId(eventStatusId);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Base'.
	 * @return Long baseId
	 */
	@io.vertigo.datamodel.structure.stereotype.ForeignKey(smartType = "STyId", label = "Base", fkDefinition = "DtBase" )
	public Long getBaseId() {
		return (Long) baseIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Base'.
	 * @param baseId Long
	 */
	public void setBaseId(final Long baseId) {
		baseIdAccessor.setId(baseId);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Person'.
	 * @return Long personId
	 */
	@io.vertigo.datamodel.structure.stereotype.ForeignKey(smartType = "STyId", label = "Person", fkDefinition = "DtPerson" )
	public Long getPersonId() {
		return (Long) personIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Person'.
	 * @param personId Long
	 */
	public void setPersonId(final Long personId) {
		personIdAccessor.setId(personId);
	}

 	/**
	 * Association : Base.
	 * @return l'accesseur vers la propriété 'Base'
	 */
	public StoreVAccessor<io.mars.basemanagement.domain.Base> base() {
		return baseIdAccessor;
	}

 	/**
	 * Association : Event Status.
	 * @return l'accesseur vers la propriété 'Event Status'
	 */
	public EnumStoreVAccessor<io.mars.basemanagement.domain.EventStatus, io.mars.basemanagement.domain.EventStatusEnum> eventStatus() {
		return eventStatusIdAccessor;
	}

 	/**
	 * Association : Person.
	 * @return l'accesseur vers la propriété 'Person'
	 */
	public StoreVAccessor<io.mars.hr.domain.Person> person() {
		return personIdAccessor;
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DtObjectUtil.toString(this);
	}
}
